{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","myStyle","setMyStyle","btnMode","setBtnMode","className","style","id","type","onClick","border","Navbar","props","mode","to","title","placeholder","toggleMode","htmlFor","Textform","text","setText","heading","value","onChange","event","console","log","target","rows","newTEXT","toUpperCase","showAlert","lowText","toLocaleLowerCase","split","length","Alert","alert","class","role","word","lower","toLowerCase","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2022dfcb.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n\r\n  const[ myStyle, setMyStyle ] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\"\r\n  })\r\n\r\n  const[ btnMode, setBtnMode ] = useState('Enable Dark Mode');\r\n\r\n  const handleMode = () => {\r\n\r\n    if(myStyle.color === 'black'){\r\n      setMyStyle({\r\n          color: \"white\",\r\n          backgroundColor: \"black\",\r\n          border: \"1px solid white\"\r\n        })\r\n        setBtnMode(\"Disable Dark Mode\")\r\n    }else{\r\n      setMyStyle({\r\n      color: \"black\",\r\n      backgroundColor: \"white\"\r\n    })\r\n    setBtnMode(\"Enable Dark Mode\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n      <h1 className=\"my-3\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n        <button type=\"button\" onClick={handleMode} className=\"btn btn-primary\">{btnMode}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n  return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n\r\n            <div className={`form-check form-switch mx-4 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react';\r\n\r\n\r\nexport default function Textform(props) {\r\n  const [ text, setText ] = useState(\"Enter Text Here\");\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"Something Changed\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleUpClick = () => {\r\n    let newTEXT = text.toUpperCase();\r\n    setText(newTEXT);\r\n    props.showAlert(\"Converted to UpperCase\", \"success\");\r\n  }\r\n\r\n  const handleLowClick = () => {\r\n    let lowText = text.toLocaleLowerCase();\r\n    setText(lowText);\r\n    props.showAlert(\"Converted to LowerCase\", \"success\");\r\n  }\r\n\r\n  const handleClearClick = () => {\r\n    setText('');\r\n    props.showAlert(\"Text cleared\", \"success\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <div className=\"container mb-3\" style={{color : props.mode === 'light' ? 'black' : 'white'}}>\r\n        <h1>{props.heading}</h1>\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{ backgroundColor : props.mode === 'light' ? 'white' : 'grey', color : props.mode === 'light' ? 'black' : 'white'}}></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button className=\"btn btn-primary mx-3\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n      <button className=\"btn btn-primary mx-3\" onClick={handleClearClick}>Clear Text</button>\r\n    </div>\r\n\r\n    <div className=\"container my-3\" style={{color : props.mode === 'light' ? 'black' : 'white'}}>\r\n      <h1>Your Text Summary</h1>\r\n      <p>{text.split(\" \").length} total words and {text.length} total characters.</p>\r\n      <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [ mode, setMode ] = useState('light');\n  const [ alert, setAlert ] = useState(null);\n\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = () => {\n    if(mode == 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been Enabled\", \"success\");\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been Enabled\", \"success\");\n    }\n  }\n\n\n  return (\n    <>\n    <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}\n    />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <Textform heading=\"Enter the Text below to Analyze\" mode={mode} showAlert={showAlert} />\n          </Route>\n        </Switch>\n    </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}